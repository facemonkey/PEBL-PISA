define Start (lParameter )
{
	gWindow <- MakeWindow()
	gPic <- MakeImage("pebl.bmp")
	AddObject(gPic, gWindow)
	lBG <- MakeColor("GREY")
	lFG <- MakeColor("dodgerblue3")
	lFont <- MakeFont("Vera.ttf",0,22,lFG,lBG,1)
	lText <- MakeLabel("Hello World", lFont)

	Move(lText, 300,200)



	AddObject(lText,gWindow)
	Draw()
	x <- 0
	y <- 50
	i <- 0

   #Wait 2 seconds before we start to make sure everything gets processed.
    Wait(1000)
    cycs <- []
    rts <- []

	while(i < 50)
	{
        cycles <- RandomDiscrete(5)
	Draw()
	Draw()
	Draw()
	time1 <- GetTime()
	out<-DrawFor(gWindow,cycles)	
	time2 <- GetTime()
	
        cycs <- Append(cycs,cycles)
        rts <- Append(rts,(time2-time1))
	
      i <- i + 1
	}


	Hide(lText)
	Hide(gPic)
	lText2 <-MakeLabel("Press the 'X' key to Continue", lFont)
	AddObject(lText2,gWindow)	
	MOVE(lText2, 200, 300)	
	Draw()
	stats <- AggregateRTs(rts,cycs)
    Print("Cycles Num Mean SD")
	Print(stats)
    Print(Transpose([cycs,rts]))


       
       mygraph <- MakeGraph(Nth(Transpose(stats),3),500,200,300,600)
       AddObject(mygraph,gWindow)
       Move(mygraph,300,100)
       Draw()
       WaitForAnyKeyPress()

	WaitForKeyDown("X")
	Wait(300)
}


## This finds mean and SD RT for 
## each of the conditions specified in delays
##
define AggregateRTs(rts, delays)
{

  ## start by sorting both rts and delays by delays;
  ## then move through them and analyze subparts.
  rtX <- SortBy(rts,delays)
  deX <- Sort(delays)
  trials <- Transpose([deX,rtX])
  
  stats <- []

  lastdelay <- First(deX)

  tmpRT <- []  

  loop(i, trials)
  {

     ## if the current delay differs from the previous delay,
	 ## we should analyze what is in tmp right now.
     if(First(i) != lastdelay)
     {

       stats <- Append(stats,
                      [lastdelay, Length(tmpRT),
	                  Mean(tmpRT), StdDev(tmpRT)])
       tmpRT <- []
     }

    lastdelay <- First(i) 
    tmpRT <- Append(tmpRT, Nth(i, 2))
  }
 
 stats <- Append(stats,
                [lastdelay, Length(tmpRT),
                 Mean(tmpRT), StdDev(tmpRT)])

 return stats
}
